//# publish
module 0x2.A {
  struct C has drop { x: u64 }

  public make(): Self.C {
  label b0:
    return C { x: 0};
  }

  public mutate(c: &mut Self.C): &mut u64 {
  label b0:
    return &mut move(c).C::x;
  }
}

//# run --signers 0x1 --check-runtime-types
import 0x2.A;
main(account: signer) {
    let c: A.C;
    let c_ref_mut: &mut u64;

label b0:
    c = A.make();
    c_ref_mut = A.mutate(&mut c);
    // MoveLoc would fail as it failed to take unique ownership of c.
    _ = move(c);

    return;
}
