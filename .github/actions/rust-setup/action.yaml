name: "Rust Setup"
description: "Setup the rust toolchain and cache"
inputs:
  GIT_CREDENTIALS:
    description: "Optional credentials to pass to git"
    required: false
  ADDITIONAL_KEY:
    description: "An optional additional key to pass to rust-cache"
    required: false
    default: ""

runs:
  using: composite
  steps:
    - name: Install Ubuntu dependencies
      run: sudo apt-get update && sudo apt-get install build-essential ca-certificates clang curl git libpq-dev libssl-dev pkg-config lsof lld --no-install-recommends --assume-yes
      shell: bash

    - name: Install rust toolchain
      uses: dsherret/rust-toolchain-file@v1

    # rust-cache action will cache ~/.cargo and ./target
    # https://github.com/Swatinem/rust-cache#cache-details
    - name: Setup cargo dependency cache
      uses: swatinem/rust-cache@v2
      with:
        key: ${{ inputs.ADDITIONAL_KEY }}

    - name: Run sccache-cache only on non-release runs
      if: contains(github.event.pull_request.labels.*.name, 'CICD:sccache')
      uses: mozilla-actions/sccache-action@v0.0.3
    - name: Set Rust caching env vars only on non-release runs
      if: contains(github.event.pull_request.labels.*.name, 'CICD:sccache')
      shell: bash
      run: |
        echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
        echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV

    - name: Install protoc and related tools
      shell: bash
      run: scripts/dev_setup.sh -b -r -y -P -J -t

    - name: "Add ~/.cargo/bin to PATH"
      run: echo "/home/runner/.cargo/bin" | tee -a $GITHUB_PATH
      shell: bash

    - name: Setup git credentials
      if: inputs.GIT_CREDENTIALS != ''
      shell: bash
      run: |
        git config --global credential.helper store
        echo "${{ inputs.GIT_CREDENTIALS }}" > ~/.git-credentials

    # Display the rust toolchain version being installed
    - name: Show rust toolchain
      shell: bash
      run: rustup show
